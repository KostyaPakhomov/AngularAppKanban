{"version":3,"sources":["./src/app/project-stage/project-stage.component.html","./src/app/project-stage/project-stage.component.ts","./src/app/project/project.component.html","./src/app/project/project.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"project_stage\">\n  <button class=\"project_stage_name\" (click)=\"stageName()\">{{title}}</button>\n  <ul>\n    <li *ngFor=\"let proj of projects\">\n      {{proj}}\n      <app-project>\n      </app-project>\n    </li>\n  </ul>\n  <button (click)=\"addProject()\">Add</button>\n</div>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-project-stage',\n  templateUrl: './project-stage.component.html',\n  styleUrls: ['./project-stage.component.css']\n})\n\nexport class ProjectStageComponent implements OnInit {\n  title: string | null = 'Write stage';\n  projects = [];\n  // name = prompt('Add name of project');\n  name: string | undefined;\n  ngOnInit(): void {\n  }\n  // tslint:disable-next-line:typedef\n  stageName() {\n    this.title = prompt('Add neme of stage');\n  }\n  // tslint:disable-next-line:typedef\n  addProject() {\n    // @ts-ignore\n    this.projects.push(this.name = prompt('Add'));\n  }\n\n}\n","<ul>\n  <li *ngFor=\"let task of tasks\">{{task}}</li>\n</ul>\n<button (click)=\"addTask()\">Add</button>\n\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  tasks = [];\n  // name = prompt('Add name of project');\n  nameTask: string | undefined;\n  constructor() {\n  }\n  ngOnInit(): void {\n  }\n  // tslint:disable-next-line:typedef\n  addTask() {\n    // @ts-ignore\n    this.tasks.push(this.nameTask = prompt('Add task'));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Kanban-board';\n}\n","\r\n<h1>{{title | uppercase}}</h1>\r\n\r\n<div class=\"stages\">\r\n  <app-project-stage></app-project-stage>\r\n  <app-project-stage></app-project-stage>\r\n  <app-project-stage></app-project-stage>\r\n  <app-project-stage></app-project-stage>\r\n  <app-project-stage></app-project-stage>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProjectComponent } from './project/project.component';\nimport { ProjectStageComponent } from './project-stage/project-stage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectStageComponent,\n    ProjectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}